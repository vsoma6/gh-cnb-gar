name: Build and Publish to GAR

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }} # TODO: update Google Cloud project id
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REPOSITORY: demo01-gh-cnb-gar # TODO: update Artifact Registry repository name
  SERVICE: sample-java-springboot # TODO: update name os artifact
  SOURCE_DIRECTORY: sample-java-springboot-gradle #TODO: update source code directory

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # BEGIN - Docker auth

      # Authenticate - Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      # BEGIN - Pack download, build and publish
      - id: setup-tools
        uses: buildpacks/github-actions/setup-tools@v5.1.0
      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v5.1.0
        
      # Build and publish image to Google Artifact Registry
      - name: Build and Publish with Buildpacks
        run: |-
          pack config default-builder gcr.io/buildpacks/builder:google-22
          pack build ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }} --path=${{ env.SOURCE_DIRECTORY }} --publish
      # END - Docker auth, pack download, buildpack build and publish

